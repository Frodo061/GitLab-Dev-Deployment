---

- name: create a disk
  gcp_compute_disk:
    name: "{{ item }}"
    size_gb: "{{ disk_size }}"
    source_image: "{{ source_image }}"
    zone: "{{ gcp_zone }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: disk
  loop: "{{ disks }}"

- name: create a network
  gcp_compute_network:
    name: "{{ network_name }}"
    auto_create_subnetworks: true
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: network

- name: create a subnetwork
  gcp_compute_subnetwork:
    name: "{{ subnetwork_name }}"
    region: "{{ gcp_region }}"
    network: "{{ network }}"
    ip_cidr_range: "{{ subnetwork_ip_cidr_range }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: subnetwork

- name: external subnetwork firewall rules
  gcp_compute_firewall:
    name: "{{ subnetwork_external_rules_name }}"
    allowed:
      - ip_protocol: tcp
        ports: "{{ subnetwork_public_ports }}"
      - ip_protocol: icmp
    network: "global/networks/{{ network.name }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present

- name: internal subnetwork firewall rules
  gcp_compute_firewall:
    name: "{{ subnetwork_internal_rules_name }}"
    allowed:
      - ip_protocol: tcp
        ports: "{{ subnetwork_private_ports }}"
    source_ranges: "{{ subnetwork_ip_cidr_range }}"
    network: "global/networks/{{ network.name }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present

- name: create a address
  gcp_compute_address:
    name: "{{ item }}"
    region: "{{ gcp_region }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: address
  loop: "{{ addresses }}"

- name: create a instance
  gcp_compute_instance:
    name: "{{ item.name }}"
    machine_type: "{{ gcp_machine_type }}"
    disks:
      - auto_delete: true
        boot: true
        source: "{{ disk.results[item.index - 1] }}"
    scheduling:
      preemptible: true
    metadata:
      startup-script: |
        #!/bin/bash
        apt-get update -y
        apt-get upgrade -y
        apt-get install tmux -y
        apt-get install nmap -y
        export LC_CTYPE=en_US.UTF-8
        export LC_ALL=en_US.UTF-8
    tags:
      items: "{{ item.tag }}"
    network_interfaces:
      - subnetwork: "{{ subnetwork }}"
        access_configs:
        - name: External NAT
          nat_ip: "{{ address.results[item.index - 1] }}"
          type: ONE_TO_ONE_NAT
    zone: "{{ gcp_zone }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: instance
  loop: "{{ instances }}"

- name: Add hosts to in memory inventory
  add_host:
    name: "{{ item.networkInterfaces[0].accessConfigs[0].natIP }}"
    groups: "{{ item.tags['items'] | join(',') }}"
  loop: "{{ instance.results }}"

- name: Wait for instances to respond
  wait_for:
    host: "{{ item }}"
    port: 22
  loop: "{{ groups['all'] }}"
